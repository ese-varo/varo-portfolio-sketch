<?xml version="1.0" encoding="UTF-8"?>
<svg width="600" height="148.51" version="1.1" viewBox="0 0 158.75 39.294" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
 <metadata>
  <rdf:RDF>
   <cc:Work rdf:about="">
    <dc:format>image/svg+xml</dc:format>
    <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
    <dc:title/>
   </cc:Work>
  </rdf:RDF>
 </metadata>
 <g transform="translate(-1323.8 -1352.6)">
  <g transform="matrix(1.7525 0 0 1.7525 1227.2 2290.3)" fill="#6bfcff" stroke-width="1.0001">
   <g transform="matrix(1.0101 0 0 1.0101 -163.59 -846.19)" fill="#6bfcff" style="font-variant-caps:normal;font-variant-east-asian:normal;font-variant-ligatures:normal;font-variant-numeric:normal;mix-blend-mode:normal" aria-label=";">
    <path d="m249.95 310.19c-0.83608 0-1.5629 0.31046-2.1822 0.92958-0.58833 0.58833-0.88254 1.3001-0.88254 2.1362 0 0.83589 0.29421 1.5638 0.88254 2.1833 0.61927 0.58832 1.3461 0.88254 2.1822 0.88247 0.58831 0 1.1155-0.13941 1.58-0.41717 0.46445-0.27851 0.81985-0.65006 1.0676-1.1146 0.27867-0.46436 0.41825-0.97551 0.41825-1.5329 0-0.83609-0.30924-1.5478-0.92849-2.1362-0.58837-0.61909-1.3013-0.9296-2.1373-0.9296zm-0.0952 9.8297c-0.79254 0-1.4877 0.28978-2.087 0.86964-0.5799 0.57999-0.86967 1.3239-0.86967 2.2325 0 0.54129 0.15372 1.0539 0.46317 1.5372 0.3286 0.48321 0.75422 0.85051 1.2762 1.1018l-1.5949 4.4649h3.7408l1.4206-3.8563c0.23202-0.5993 0.40608-1.1501 0.522-1.6527 0.13542-0.50258 0.2033-1.0152 0.2033-1.5371 0-0.86988-0.28975-1.6139-0.86967-2.2325-0.56062-0.61863-1.2961-0.9274-2.2047-0.9274zm6.5862 7.3543v0.51561h9.3493v-0.51561h-8.5812zm-29.09-19.346v8.2034h1.0337v-8.2034zm-4.5634 2.3373c-0.6293 1.5e-4 -1.1687 0.13473-1.6182 0.40454-0.44951 0.26228-0.79385 0.62234-1.0336 1.0792-0.23973 0.4495-0.36008 0.95453-0.36008 1.5165 0 0.55435 0.10899 1.0607 0.32617 1.5176 0.21728 0.45704 0.52848 0.81994 0.93305 1.0897 0.40451 0.26216 0.88377 0.39398 1.4382 0.39398 0.38205 0 0.71504-0.0645 0.99973-0.19169 0.28473-0.12744 0.52118-0.28802 0.70852-0.48292 0.19477-0.20225 0.34835-0.41202 0.46067-0.62911h0.0233v1.1682h1.0453v-2.8986c0-0.55432-0.12041-1.0565-0.36007-1.506-0.23222-0.44951-0.56521-0.80539-0.99973-1.0675-0.4345-0.26228-0.95529-0.39397-1.5621-0.39397zm16.194 0c-0.62933 1.5e-4 -1.1698 0.13473-1.6193 0.40454-0.44951 0.26228-0.79387 0.62234-1.0336 1.0792-0.23975 0.4495-0.35902 0.95453-0.35902 1.5165 0 0.55435 0.109 1.0607 0.32618 1.5176 0.21722 0.45704 0.52846 0.81994 0.93304 1.0897 0.40453 0.26216 0.88381 0.39398 1.4382 0.39398 0.38208 0 0.71508-0.0645 0.99975-0.19169 0.28468-0.12744 0.52015-0.28802 0.70744-0.48292 0.19479-0.20225 0.34941-0.41202 0.46175-0.62911h0.0222v1.1682h1.0442v-2.8986c0-0.55432-0.11918-1.0565-0.35901-1.506-0.23225-0.44951-0.56526-0.80539-0.99975-1.0675-0.43452-0.26228-0.95531-0.39397-1.5621-0.39397zm-9.5526 0.13556 1.866 5.0231c0.0974 0.26963 0.24674 0.47935 0.44903 0.62911 0.20972 0.14227 0.44212 0.21388 0.69684 0.21392 0.26223 0 0.49457-0.0713 0.69687-0.21392 0.20225-0.14993 0.35578-0.35948 0.46068-0.62911l1.865-5.0231h-1.112l-1.6744 4.6408c-0.0299 0.075-0.0633 0.12813-0.10074 0.15777-0.0299 0.029-0.0714 0.0444-0.124 0.0444-0.045 0-0.0864-0.015-0.12399-0.0444-0.0376-0.0304-0.0705-0.0834-0.10074-0.15777l-1.6638-4.6408zm15.711 0c-0.50942 0-0.9109 0.14632-1.203 0.43843-0.28469 0.28464-0.42682 0.68102-0.42682 1.1904v4.1017h1.0337v-4.0339c0-0.25477 0.0684-0.45278 0.20327-0.59519 0.14212-0.14256 0.33626-0.21389 0.58351-0.21389h0.98917v-0.88753zm-22.375 0.75302c0.38206 0 0.71607 0.0929 1.0008 0.28065 0.28465 0.17997 0.50149 0.42672 0.65132 0.74134 0.15738 0.31474 0.23617 0.67046 0.23617 1.0675 0 0.40448-0.083 0.77179-0.24782 1.1014-0.15738 0.32213-0.38239 0.57732-0.67461 0.76461-0.28466 0.17961-0.61346 0.27007-0.9881 0.27007-0.40455 0-0.74896-0.0941-1.0336-0.28171-0.28473-0.18736-0.50258-0.43831-0.65235-0.75297-0.14993-0.32209-0.22452-0.67802-0.22452-1.0676 0-0.40462 0.0746-0.76341 0.22452-1.0781 0.15738-0.32221 0.37829-0.57721 0.66295-0.7646 0.29221-0.18736 0.64073-0.28065 1.0453-0.28065zm16.194 0c0.38205 0 0.71505 0.0929 0.99975 0.28065 0.28471 0.17997 0.50146 0.42672 0.6513 0.74134 0.1574 0.31474 0.23616 0.67046 0.23616 1.0675 0 0.40448-0.0819 0.77179-0.24674 1.1014-0.15738 0.32213-0.38238 0.57732-0.67462 0.76461-0.28465 0.17961-0.61351 0.27007-0.98809 0.27007-0.40458 0-0.75002-0.0941-1.0347-0.28171-0.28467-0.18736-0.50149-0.43831-0.65131-0.75297-0.14992-0.32209-0.22557-0.67802-0.22557-1.0676 0-0.40462 0.0758-0.76341 0.22557-1.0781 0.15737-0.32221 0.37824-0.57721 0.66295-0.7646 0.29216-0.18736 0.6407-0.28065 1.0453-0.28065zm-3.4165 5.8936v3.4949h-0.0233c-0.12744-0.23224-0.29543-0.4356-0.50516-0.60788-0.20224-0.17263-0.43885-0.30623-0.70851-0.40353-0.26222-0.0983-0.53921-0.14617-0.83137-0.14617-0.53192 0-1.008 0.11918-1.4276 0.35901-0.41951 0.23973-0.75251 0.58092-0.99976 1.023-0.2397 0.43458-0.359 0.95122-0.359 1.5504 0 0.47203 0.0707 0.89945 0.21287 1.2815 0.14992 0.3746 0.35626 0.69618 0.61846 0.96581 0.26225 0.26972 0.57344 0.47614 0.93304 0.61854 0.3596 0.13473 0.75588 0.20224 1.1904 0.20224 0.55437 0 1.0523-0.11918 1.4943-0.35901 0.44201-0.23978 0.79057-0.58416 1.0453-1.0337 0.26221-0.45691 0.39397-1.0036 0.39397-1.6404v-5.3048zm5.3154 0v8.2034h1.0336v-8.2034zm2.6741 0v8.2034h1.0336v-8.2034zm41.67 0.01v3.4896h-0.0233c-0.1273-0.23191-0.29465-0.43374-0.50412-0.60578-0.20203-0.17207-0.43805-0.30631-0.70743-0.40354-0.26174-0.0974-0.53856-0.14616-0.83029-0.14616-0.53112 0-1.0066 0.11973-1.4255 0.35904-0.41893 0.23932-0.75185 0.57953-0.9987 1.0209-0.23938 0.4339-0.35898 0.94994-0.35898 1.5484 0 0.47135 0.0716 0.89788 0.2139 1.2793 0.14964 0.37399 0.35459 0.69649 0.61639 0.96583 0.26183 0.26928 0.57292 0.47417 0.93197 0.6164 0.35906 0.13459 0.75549 0.20225 1.1893 0.20225 0.55364 0 1.0508-0.11973 1.4922-0.35904 0.44136-0.23934 0.78988-0.58376 1.0442-1.0326 0.26181-0.45632 0.39187-1.0025 0.39187-1.6384v-5.2963zm-46.491 0.15775c-0.18734 0-0.3522 0.0707-0.49456 0.21287-0.13474 0.13487-0.20227 0.29677-0.20227 0.48402 0 0.18731 0.0676 0.35119 0.20227 0.49356 0.14256 0.13473 0.30722 0.20326 0.49456 0.20326 0.18735 0 0.34808-0.0685 0.4829-0.20326 0.14213-0.14212 0.21396-0.30629 0.21396-0.49356 0-0.18733-0.0716-0.34911-0.21396-0.48402-0.13473-0.14227-0.29568-0.2129-0.4829-0.21287zm-19.25 2.1679c-0.55441 0-1.0523 0.11918-1.4944 0.35907-0.44197 0.23972-0.79362 0.58812-1.0559 1.0453-0.25475 0.44934-0.38337 0.99287-0.38337 1.6298v5.3038h1.0347v-3.4949h0.0233c0.12744 0.23224 0.29225 0.43446 0.49457 0.60684 0.20978 0.17244 0.44523 0.30718 0.70744 0.40454 0.2697 0.0974 0.55079 0.14512 0.843 0.14512 0.53191 0 1.0081-0.11918 1.4276-0.35899 0.41953-0.23974 0.74943-0.5769 0.98916-1.0114 0.24721-0.44199 0.37065-0.96275 0.37065-1.5621 0-0.47191-0.0757-0.89515-0.22555-1.2698-0.14212-0.3821-0.3446-0.70776-0.60685-0.97748-0.26217-0.26975-0.57235-0.47203-0.93197-0.60686-0.3596-0.14257-0.75694-0.21391-1.1914-0.21391zm6.9791 0c-0.6293 0-1.1687 0.13349-1.6182 0.40353-0.44954 0.2621-0.79391 0.62227-1.0337 1.0791-0.23978 0.44954-0.36007 0.9557-0.36007 1.5176 0 0.55445 0.10913 1.0596 0.3262 1.5166 0.21719 0.45698 0.5274 0.82001 0.93196 1.0898 0.40455 0.26209 0.88487 0.39289 1.4392 0.39289 0.3821 0 0.71501-0.0639 0.99976-0.19066 0.28463-0.12744 0.52007-0.28814 0.70741-0.48291 0.19479-0.20225 0.34941-0.41189 0.46178-0.62904h0.0222v1.1681h1.0453v-2.899c0-0.55441-0.12056-1.0564-0.36009-1.506-0.23227-0.44956-0.56624-0.80538-1.0008-1.0675-0.43452-0.26224-0.95421-0.39295-1.561-0.39295zm32.516 0.01c-0.53861 0-0.9984 0.10817-1.3799 0.32512-0.38153 0.21692-0.67381 0.50928-0.87584 0.87584-0.20183 0.36651-0.3029 0.77021-0.3029 1.2116v3.4451h1.0315v-3.4451c0-0.2843 0.0678-0.5423 0.20224-0.77416 0.13459-0.23175 0.31357-0.41498 0.53798-0.54967 0.23194-0.1346 0.48989-0.20225 0.77417-0.20225 0.29172 0 0.55391 0.0718 0.78583 0.21399 0.23929 0.13459 0.42659 0.31775 0.5613 0.54961 0.14212 0.22442 0.21287 0.47824 0.21287 0.76252v3.4451h1.0326v-3.4451c0-0.28428 0.0678-0.5381 0.20225-0.76252 0.1421-0.23182 0.3326-0.41487 0.57188-0.54961 0.23945-0.14212 0.50145-0.21399 0.7858-0.21399 0.29168 0 0.54974 0.068 0.77418 0.20225 0.23185 0.13459 0.4149 0.31778 0.54964 0.54967 0.1346 0.23186 0.20225 0.48986 0.20225 0.77416v3.4451h1.0315v-3.4451c0-0.44136-0.10102-0.84506-0.30288-1.2116-0.20203-0.36656-0.49326-0.65892-0.87479-0.87584-0.38151-0.21692-0.83824-0.32512-1.3693-0.32512-0.26933 0-0.53452 0.0376-0.79643 0.1123-0.26177 0.0674-0.50524 0.18692-0.72968 0.35904-0.22435 0.16456-0.41057 0.38926-0.56023 0.67356h-0.011c-0.13473-0.2843-0.31466-0.50899-0.53905-0.67356-0.22443-0.17226-0.46678-0.29167-0.72862-0.35904-0.2618-0.0747-0.52391-0.1123-0.78583-0.1123zm10.773 0c-0.54611 0-1.0257 0.13102-1.4371 0.39293-0.41148 0.26177-0.73289 0.62071-0.96481 1.077-0.23193 0.44885-0.34737 0.9577-0.34737 1.5261 0 0.57609 0.13404 1.0816 0.40351 1.5155 0.27681 0.42635 0.65858 0.75821 1.1448 0.99763 0.48624 0.23189 1.0439 0.34841 1.6722 0.34841h1.47v-0.88607h-1.4922c-0.36654 0-0.70259-0.06-1.0093-0.18015-0.29924-0.12716-0.54683-0.31028-0.74133-0.54967-0.19438-0.2468-0.31001-0.54537-0.34735-0.89702h4.2637c0.015-0.0673 0.0233-0.14633 0.0233-0.23613 6e-3 -0.0897 0.011-0.17612 0.011-0.25844 0-0.5311-0.0966-1.0098-0.29123-1.436-0.19459-0.43391-0.48996-0.77826-0.88641-1.0326-0.389-0.25431-0.87898-0.38122-1.47-0.38122zm6.6307 0c-0.51617 0-0.97598 0.10817-1.38 0.32512-0.40395 0.20947-0.7213 0.50489-0.95315 0.88642-0.22445 0.38155-0.33678 0.82677-0.33678 1.3354v3.3106h1.0315v-3.2989c0-0.34411 0.0747-0.63957 0.22454-0.88638 0.15682-0.25434 0.35993-0.44889 0.60681-0.58358 0.25437-0.1346 0.52271-0.20225 0.80701-0.20225 0.28423 0 0.55055 0.068 0.79746 0.20225 0.25434 0.13459 0.45619 0.32924 0.60578 0.58358 0.15683 0.24681 0.23509 0.54227 0.23509 0.88638v3.2989h1.0326v-3.3106c0-0.50868-0.11547-0.9539-0.34737-1.3354-0.22444-0.38153-0.5386-0.67695-0.94256-0.88642-0.3965-0.21692-0.85736-0.32512-1.381-0.32512zm14.172 0c-0.58346 0-1.0995 0.13529-1.5483 0.40457-0.44878 0.2618-0.80354 0.62074-1.0654 1.077-0.26184 0.44886-0.3929 0.95335-0.3929 1.5145s0.13088 1.0697 0.3929 1.526c0.26185 0.44886 0.61661 0.80775 1.0654 1.077 0.44888 0.2619 0.96488 0.39291 1.5483 0.39295 0.5835 0 1.1006-0.13129 1.5494-0.39295 0.45637-0.26927 0.81107-0.62816 1.0654-1.077 0.26185-0.45639 0.3929-0.96492 0.3929-1.526s-0.13088-1.0656-0.3929-1.5145c-0.25435-0.4563-0.60905-0.81524-1.0654-1.077-0.44884-0.26931-0.96589-0.40457-1.5494-0.40457zm12.758 0c-0.62831 0-1.1662 0.13529-1.615 0.40457-0.44888 0.2618-0.79321 0.62074-1.0326 1.077-0.23942 0.44886-0.35903 0.95335-0.35903 1.5145 0 0.55366 0.10831 1.0592 0.32512 1.5155 0.21696 0.45635 0.52805 0.81833 0.93195 1.0876 0.40398 0.2619 0.8825 0.39291 1.4361 0.39295 0.38153 0 0.71442-0.0633 0.99869-0.19064 0.28423-0.1273 0.51937-0.28842 0.70638-0.48292 0.1946-0.20203 0.34862-0.411 0.46069-0.62799h0.0233v1.167h1.0432v-2.8954c0-0.5537-0.11959-1.054-0.35903-1.5028-0.23189-0.44887-0.56484-0.80468-0.99867-1.0664-0.43391-0.2618-0.95405-0.39293-1.56-0.39293zm-65.107 0.12717v5.7305h1.0453v-5.7305zm56.558 0.01v0.8864h2.906c0.11973 0 0.21634 0.0418 0.29126 0.124 0.0747 0.0747 0.11326 0.15683 0.11326 0.24675 0 0.0747-0.0186 0.14543-0.0573 0.2129-0.0301 0.0674-0.10074 0.13529-0.21286 0.20224l-2.637 1.6722c-0.22443 0.14962-0.39503 0.31817-0.51469 0.50521-0.11244 0.17943-0.16951 0.3886-0.16951 0.62799 0 0.22445 0.0519 0.43354 0.15666 0.62804 0.1123 0.18712 0.26203 0.33688 0.44903 0.44901 0.18691 0.11216 0.40032 0.16841 0.63965 0.16841h3.3773v-0.88643h-3.0628c-0.12716 0-0.22797-0.0376-0.30286-0.1123-0.0747-0.0824-0.1123-0.16878-0.1123-0.25844 0-0.0747 0.015-0.14542 0.0444-0.2129 0.0376-0.0674 0.11244-0.13473 0.22452-0.20223l2.637-1.6723c0.21694-0.14212 0.38132-0.30645 0.49351-0.49352 0.11973-0.19437 0.17906-0.40771 0.17906-0.63969 0-0.22445-0.055-0.42934-0.16731-0.61635-0.10459-0.19457-0.25142-0.34854-0.43843-0.46067-0.17943-0.11216-0.38446-0.16823-0.61637-0.16823zm-25.013 0.72969c0.24688 0 0.46014 0.0376 0.63966 0.1123 0.18713 0.0749 0.34101 0.17594 0.46068 0.30289 0.1273 0.11973 0.22819 0.25802 0.30289 0.41514 0.0747 0.14962 0.12798 0.30674 0.15775 0.47131 0.0301 0.15683 0.0444 0.30685 0.0444 0.44903h-3.2661c0.015-0.20952 0.0597-0.41964 0.13459-0.62911 0.0747-0.20944 0.18403-0.39565 0.32621-0.56023 0.14212-0.17224 0.31066-0.30728 0.50516-0.40455 0.20203-0.10459 0.43293-0.15665 0.69476-0.15665zm-50.267 0.0165c0.3521 0 0.67058 0.086 0.95524 0.25838 0.29222 0.17244 0.52453 0.4161 0.69687 0.73074 0.17244 0.31469 0.25839 0.6891 0.25839 1.1237 0 0.41951-0.086 0.78575-0.25839 1.1003-0.16473 0.31462-0.38993 0.56255-0.67462 0.7424-0.28468 0.17979-0.6062 0.26898-0.96586 0.26898-0.35211 0-0.67477-0.086-0.96692-0.25841-0.28467-0.17226-0.51288-0.41515-0.68521-0.72968-0.16472-0.3222-0.24782-0.70079-0.24782-1.1353 0-0.42709 0.083-0.79733 0.24782-1.112 0.17245-0.31464 0.40054-0.55837 0.68521-0.73074 0.29215-0.17208 0.61063-0.25838 0.95529-0.25838zm6.9558 0c0.38211 0 0.71612 0.0926 1.0008 0.28062 0.28468 0.17961 0.50148 0.42672 0.65132 0.74133 0.15737 0.31468 0.23617 0.67031 0.23617 1.0676 0 0.40447-0.082 0.77177-0.24675 1.1014-0.1574 0.32226-0.38243 0.57732-0.67464 0.76467-0.28468 0.17979-0.61457 0.26903-0.98913 0.26898-0.40458 0-0.74899-0.0928-1.0336-0.28065-0.28471-0.18735-0.5015-0.43835-0.65132-0.753-0.14992-0.32215-0.22558-0.67693-0.22558-1.0665 0-0.40451 0.0754-0.76551 0.22558-1.0802 0.15739-0.32222 0.37828-0.57623 0.66298-0.76363 0.29216-0.18734 0.63969-0.28062 1.0442-0.28062zm7.2153 0c0.35211 0 0.67053 0.086 0.95527 0.25838 0.29211 0.17244 0.52034 0.4192 0.68518 0.74133 0.17246 0.31472 0.2584 0.69022 0.2584 1.1247 0 0.42712-0.0862 0.79719-0.2584 1.112-0.16473 0.31453-0.39307 0.55747-0.68518 0.72968-0.28474 0.17227-0.60011 0.25841-0.94468 0.25841-0.35213 0-0.67371-0.086-0.96589-0.25841-0.2847-0.17226-0.51393-0.41515-0.68623-0.72968-0.17246-0.31483-0.25736-0.68909-0.25736-1.1236 0-0.4196 0.0809-0.78792 0.24569-1.1025 0.17245-0.31453 0.40162-0.56152 0.68628-0.7413 0.28467-0.17996 0.60727-0.26899 0.96692-0.26899zm49.662 6e-3c0.35158 0 0.66995 0.0864 0.95421 0.25837 0.29178 0.17225 0.51964 0.41866 0.68414 0.74032 0.17228 0.31416 0.25841 0.68874 0.25841 1.1226 0 0.4264-0.0863 0.7967-0.25841 1.1109-0.16455 0.31417-0.39236 0.55657-0.68414 0.72865-0.28426 0.17227-0.59841 0.25839-0.94255 0.25839-0.35159 0-0.67299-0.0863-0.96481-0.25839-0.28418-0.17226-0.51315-0.41448-0.68519-0.72865-0.17227-0.31422-0.25735-0.68863-0.25735-1.1226 0-0.41885 0.082-0.78509 0.24675-1.0992 0.17226-0.31413 0.39986-0.56182 0.68415-0.74133 0.28422-0.17943 0.60565-0.26903 0.96479-0.26903zm7.2375 0c0.3965 0 0.74084 0.0939 1.0326 0.28065 0.29177 0.18714 0.52066 0.44193 0.68522 0.7636 0.16454 0.31416 0.24675 0.66893 0.24675 1.0654 0 0.39661-0.0823 0.75533-0.24675 1.0771-0.16456 0.31414-0.39345 0.56488-0.68522 0.75193-0.29174 0.18714-0.63608 0.28062-1.0326 0.28062-0.38899 0-0.7323-0.0936-1.0315-0.28062-0.29179-0.18712-0.52064-0.43779-0.6852-0.75193-0.16454-0.32175-0.24677-0.68047-0.24677-1.0771 0-0.39642 0.0822-0.75119 0.24677-1.0654 0.16455-0.32167 0.39341-0.57662 0.6852-0.7636 0.2992-0.18711 0.64251-0.28065 1.0315-0.28065zm12.736 0c0.38151 0 0.7144 0.0939 0.99869 0.28065 0.28424 0.17944 0.5016 0.42611 0.6513 0.74027 0.15683 0.31424 0.23511 0.66992 0.23511 1.0665 0 0.4039-0.0823 0.77007-0.24678 1.0993-0.157 0.32162-0.38179 0.57659-0.67352 0.76355-0.28429 0.17943-0.61302 0.269-0.98706 0.269-0.40396 0-0.7483-0.0936-1.0326-0.28062-0.28428-0.18712-0.50064-0.43779-0.65023-0.75193-0.14962-0.32175-0.22453-0.67643-0.22453-1.0654 0-0.40397 0.0747-0.76286 0.22453-1.077 0.15682-0.32167 0.37762-0.57662 0.6619-0.7636 0.29172-0.18711 0.63917-0.28065 1.0432-0.28065z" fill="#6bfcff" stroke-width="2.0496" style="font-variant-caps:normal;font-variant-east-asian:normal;font-variant-ligatures:normal;font-variant-numeric:normal"/>
   </g>
  </g>
 </g>
 <script id="mesh_polyfill" type="text/javascript">!function(){const t="http://www.w3.org/2000/svg",e="http://www.w3.org/1999/xlink",s="http://www.w3.org/1999/xhtml",r=2;if(document.createElementNS(t,"meshgradient").x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case"translate":2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error("mesh.js: translate does not have 2 arguments!"),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case"scale":1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error("mesh.js: scale does not have 1 or 2 arguments!"),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case"rotate":if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error("math.js: No argument to rotate transform!");3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case"skewX":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error("math.js: No argument to skewX transform!");break;case"skewY":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error("math.js: No argument to skewY transform!");break;case"matrix":6===l.length?h=h.append(new g(...l)):console.error("math.js: Incorrect number of arguments for matrix!");break;default:console.error("mesh.js: Unhandled transform type: "+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error("mesh.js: argument to Affine.append is not affine!");let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute("type")||"bilinear"}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute("x")),n=Number(t.getAttribute("y"));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute("path"),c="l";null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case"l":0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"L":0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"c":0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case"C":0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error("mesh.js: "+c+" invalid path type.")}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if("bilinear"===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll("rect,circle,ellipse,path,text").forEach((r,n)=&gt;{let o=r.getAttribute("id");o||(o="patchjs_shape"+n,r.setAttribute("id",o));const i=r.style.fill.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/),a=r.style.stroke.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;"meshgradient"===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,"canvas");d(l,{width:i.width,height:i.height});const c=l.getContext("2d");let u=c.createImageData(i.width,i.height);const f=new b(a);"objectBoundingBox"===a.getAttribute("gradientUnits")&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute("gradientTransform");null!=p&amp;&amp;f.transform(h(p)),"userSpaceOnUse"===a.getAttribute("gradientUnits")&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,"image");d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,"xlink:href",g),r.parentNode.insertBefore(y,r),r.style.fill="none";const w=document.createElementNS(t,"use");w.setAttributeNS(e,"xlink:href","#"+o);const m="patchjs_clip"+n,M=document.createElementNS(t,"clipPath");M.setAttribute("id",m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute("clip-path","url(#"+m+")"),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;"meshgradient"===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute("stroke-miterlimit"))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,"canvas");d(p,{width:l,height:c});const y=p.getContext("2d");let g=y.createImageData(l,c);const w=new b(o);"objectBoundingBox"===o.getAttribute("gradientUnits")&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute("gradientTransform");null!=m&amp;&amp;w.transform(h(m)),"userSpaceOnUse"===o.getAttribute("gradientUnits")&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,"image");d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,"xlink:href",S);const k="pattern_clip"+n,A=document.createElementNS(t,"pattern");d(A,{id:k,patternUnits:"userSpaceOnUse",width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke="url(#"+k+")",g=null,p=null,S=null}}})}();</script>
</svg>
